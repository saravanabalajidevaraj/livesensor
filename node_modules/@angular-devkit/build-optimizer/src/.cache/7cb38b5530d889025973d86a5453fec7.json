{"remainingRequest":"D:\\xampp\\htdocs\\live-security-web-app1\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\live-security-web-app1\\node_modules\\@syncfusion\\ej2-base\\src\\l10n.js","dependencies":[{"path":"D:\\xampp\\htdocs\\live-security-web-app1\\node_modules\\@syncfusion\\ej2-base\\src\\l10n.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\live-security-web-app1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620568869347},{"path":"D:\\xampp\\htdocs\\live-security-web-app1\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { extend } from './util';\r\nimport { defaultCulture } from './internationalization';\r\n/**\r\n * L10n modules provides localized text for different culture.\r\n * ```typescript\r\n * import {setCulture} from '@syncfusion/ts-base-library';\r\n * //load global locale object common for all components.\r\n * L10n.load({\r\n *    'fr-BE': {\r\n *       'button': {\r\n *            'check': 'vérifié'\r\n *        }\r\n *    }\r\n * });\r\n * //set globale default locale culture.\r\n * setCulture('fr-BE');\r\n * let instance: L10n = new L10n('button', {\r\n *    check: 'checked'\r\n * });\r\n * //Get locale text for current property.\r\n * instance.getConstant('check');\r\n * //Change locale culture in a component.\r\n * instance.setLocale('en-US');\r\n * ```\r\n */\r\nvar L10n = /** @class */ /*@__PURE__*/ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function L10n(controlName, localeStrings, locale) {\r\n        this.controlName = controlName;\r\n        this.localeStrings = localeStrings;\r\n        this.setLocale(locale || defaultCulture);\r\n    }\r\n    /**\r\n     * Sets the locale text\r\n     * @param {string} locale\r\n     * @returns {void}\r\n     */\r\n    L10n.prototype.setLocale = function (locale) {\r\n        var intLocale = this.intGetControlConstant(L10n.locale, locale);\r\n        this.currentLocale = intLocale || this.localeStrings;\r\n    };\r\n    /**\r\n     * Sets the global locale for all components.\r\n     * @param {Object} localeObject - specifies the localeObject to be set as global locale.\r\n     */\r\n    L10n.load = function (localeObject) {\r\n        this.locale = extend(this.locale, localeObject, {}, true);\r\n    };\r\n    /**\r\n     * Returns current locale text for the property based on the culture name and control name.\r\n     * @param {string} propertyName - specifies the property for which localize text to be returned.\r\n     * @return string\r\n     */\r\n    L10n.prototype.getConstant = function (prop) {\r\n        /* tslint:disable no-any */\r\n        return this.currentLocale[prop] || this.localeStrings[prop] || '';\r\n    };\r\n    /**\r\n     * Returns the control constant object for current object and the locale specified.\r\n     * @param {Object} curObject\r\n     * @param {string} locale\r\n     * @returns {Object}\r\n     */\r\n    L10n.prototype.intGetControlConstant = function (curObject, locale) {\r\n        if (curObject[locale]) {\r\n            return curObject[locale][this.controlName];\r\n        }\r\n        return null;\r\n    };\r\n    L10n.locale = {};\r\n    return L10n;\r\n}());\r\nexport { L10n };\r\n",null]}