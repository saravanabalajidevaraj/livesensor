var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';
import { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';
import { Template } from '@syncfusion/ej2-angular-base';
var input = ['content', 'cssClass', 'disabled', 'header'];
var outputs = [];
/**
 * TabItemDirective represent a item of the EJ2 Angular Tab.
 * ```html
 * <ejs-tab>
 *  <e-tabitems>
 *   <e-tabitem [header]='Header 1' [content]='Content 1'></e-tabitem>
 *   <e-tabitem [header]='Header 2' [content]='Content 2'></e-tabitem>
 *  <e-tabitems>
 * </ejs-tab>
 * ```
 */
var TabItemDirective = /** @class */ (function (_super) {
    __extends(TabItemDirective, _super);
    function TabItemDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        setValue('currentInstance', _this, _this.viewContainerRef);
        _this.registerEvents(outputs);
        return _this;
    }
    TabItemDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'e-tabitems>e-tabitem',
                    inputs: input,
                    outputs: outputs,
                    queries: {}
                },] },
    ];
    /** @nocollapse */
    TabItemDirective.ctorParameters = function () { return [
        { type: ViewContainerRef, },
    ]; };
    TabItemDirective.propDecorators = {
        'content': [{ type: ContentChild, args: ['content',] },],
        'header_text': [{ type: ContentChild, args: ['headerText',] },],
    };
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], TabItemDirective.prototype, "content", void 0);
    __decorate([
        Template(),
        __metadata("design:type", Object)
    ], TabItemDirective.prototype, "header_text", void 0);
    return TabItemDirective;
}(ComplexBase));
export { TabItemDirective };
/**
 * TabItem Array Directive
 * @private
 */
var TabItemsDirective = /** @class */ (function (_super) {
    __extends(TabItemsDirective, _super);
    function TabItemsDirective() {
        return _super.call(this, 'items') || this;
    }
    TabItemsDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'ejs-tab>e-tabitems',
                    queries: {
                        children: new ContentChildren(TabItemDirective)
                    },
                },] },
    ];
    /** @nocollapse */
    TabItemsDirective.ctorParameters = function () { return []; };
    return TabItemsDirective;
}(ArrayBase));
export { TabItemsDirective };
//# sourceMappingURL=items.directive.js.map